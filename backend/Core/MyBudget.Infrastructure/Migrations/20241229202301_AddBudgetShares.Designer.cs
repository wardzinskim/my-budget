// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBudget.Infrastructure.Database;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyBudget.Infrastructure.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20241229202301_AddBudgetShares")]
    partial class AddBudgetShares
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MyBudget.Domain.Budgets.Budget", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("owner_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_budgets");

                    b.ToTable("budgets", "budget");
                });

            modelBuilder.Entity("MyBudget.Domain.Budgets.Transfers.Transfer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BudgetId")
                        .HasColumnType("uuid")
                        .HasColumnName("budget_id");

                    b.Property<string>("Category")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("category");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("creation_date");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("status");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("transfer_date");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("type");

                    b.HasKey("Id", "BudgetId")
                        .HasName("pk_transfers");

                    b.ToTable("transfers", "budget");
                });

            modelBuilder.Entity("MyBudget.Domain.Budgets.Budget", b =>
                {
                    b.OwnsMany("MyBudget.Domain.Budgets.BudgetShare", "Shares", b1 =>
                        {
                            b1.Property<Guid>("BudgetId")
                                .HasColumnType("uuid")
                                .HasColumnName("budget_id");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid")
                                .HasColumnName("user_id");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("user_name");

                            b1.HasKey("BudgetId", "UserId")
                                .HasName("pk_shares");

                            b1.ToTable("shares", "budget");

                            b1.WithOwner()
                                .HasForeignKey("BudgetId")
                                .HasConstraintName("fk_shares_budgets_budget_id");
                        });

                    b.OwnsMany("MyBudget.Domain.Budgets.TransferCategory", "Categories", b1 =>
                        {
                            b1.Property<Guid>("BudgetId")
                                .HasColumnType("uuid")
                                .HasColumnName("budget_id");

                            b1.Property<string>("Name")
                                .HasMaxLength(32)
                                .HasColumnType("character varying(32)")
                                .HasColumnName("name");

                            b1.Property<string>("Status")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("character varying(16)")
                                .HasColumnName("status");

                            b1.HasKey("BudgetId", "Name")
                                .HasName("pk_categories");

                            b1.ToTable("categories", "budget");

                            b1.WithOwner()
                                .HasForeignKey("BudgetId")
                                .HasConstraintName("fk_categories_budgets_budget_id");
                        });

                    b.Navigation("Categories");

                    b.Navigation("Shares");
                });

            modelBuilder.Entity("MyBudget.Domain.Budgets.Transfers.Transfer", b =>
                {
                    b.OwnsOne("MyBudget.Domain.Shared.Money", "Value", b1 =>
                        {
                            b1.Property<Guid>("TransferId")
                                .HasColumnType("uuid")
                                .HasColumnName("id");

                            b1.Property<Guid>("TransferBudgetId")
                                .HasColumnType("uuid")
                                .HasColumnName("budget_id");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("character varying(8)")
                                .HasColumnName("currency");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("value");

                            b1.HasKey("TransferId", "TransferBudgetId");

                            b1.ToTable("transfers", "budget");

                            b1.WithOwner()
                                .HasForeignKey("TransferId", "TransferBudgetId")
                                .HasConstraintName("fk_transfers_transfers_id_budget_id");
                        });

                    b.Navigation("Value")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
